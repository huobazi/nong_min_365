 # Default server
server {
    listen 80 default_server;
    location / {
      rewrite  ^/(.*)$  http://nongmin365.com/$1  permanent;
      proxy_set_header Host "nongmin365.com";
    }
}

server {                                                                                                                                      
   listen 80;
   server_name www.nongmin365.com;
   rewrite ^/(.*) http://nongmin365.com/$1 permanent;
   proxy_set_header Host "nongmin365.com";
}

<%
# upstream unicorn {
#   server unix:/tmp/unicorn.photoapp.sock fail_timeout=0;
# }
# 
# server {
#   # listen 80 default deferred; # for Linux
#   # listen 80 default accept_filter=httpready; # for FreeBSD
#   listen 80 default;
#   
#   # server_name example.com;
#   
#   root /vagrant/public;
#   try_files $uri/index.html $uri @unicorn;
#   location @unicorn {
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header Host $http_host;
#     proxy_redirect off;
#     proxy_pass http://unicorn;
#   }
#   
#   error_page 500 502 503 504 /500.html;
#   client_max_body_size 100M;
#   keepalive_timeout 10;
# }

address_is_ip = !nginx_server_name.match(/\A\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\z/).nil?
%>

upstream <%= app %>_app_server {
  server unix:<%= unicorn_socket %> fail_timeout=0;
}

# <%= app %> Server
server {
  listen 80<%= ' default' if address_is_ip %>; # default; # Tells nginx which site to load if host is not found. For example when using IP: http://192.168.1.54
  server_name .<%= nginx_server_name %>;

  root <%= deploy_to %>/<%= current_path %>/public;
  
  gzip on;
  gzip_types text/plain text/xml application/xml application/xml+rss text/css text/javascript application/javascript application/json;

  access_log  <%= nginx_log_path %>/access.log;
  error_log   <%= nginx_log_path %>/error.log info;

  error_page 551 =503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /system/maintenance.html break;
  }
  set $maintenance 0;
  if (-f $document_root/system/maintenance.html) {
    set $maintenance 1;
  }
  if ($request_uri = /favicon.ico) {
    # Browsers will try to get favicon if it's not returned with 200ok status
    set $maintenance 0;
  }
  if ($maintenance) {
    # There can be several reasons for 503 error. We custom return 551 error
    # to ensure maintenance.html is only shown when it's really maintenance
    return 551;
  }

  rewrite ^/(.*)/$ /$1 permanent; # Truncate trailing slashes
  try_files $uri @rails;
  expires -1;

  # TODO: enable cache for all non-static content
  # maybe expires max; in server context, and expires -1; in @rails location?
  location ~ \.[\w]+$ { # Files with extension, .css, .png, etc.
    access_log off;
    error_log /dev/null;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
  }

  location = /favicon.ico {
    try_files $uri =204;
    access_log off;
    log_not_found off;
    break;
  }
  
  location ~ ^/(assets)/  {
    access_log off;
    error_log /dev/null;
    gzip_static on; # to serve pre-gzipped version
    expires max;
    add_header Cache-Control public;
    add_header Last-Modified "";
    add_header ETag "";
  }

  # location /attachment_files {
  #     root <%= deploy_to %>/<%= current_path %>/public/system;
  #     internal;
  # }

  location @rails {
    proxy_pass http://<%= app %>_app_server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_intercept_errors on;
    expires -1;
  }

  error_page 500 502 503 504 =200 /errors/500;
  error_page 403 /errors/403;
  error_page 404 /errors/404;

  client_max_body_size 50M;
  keepalive_timeout 10;
}
